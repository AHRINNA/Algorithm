#include <iostream>
using namespace;

int main(void){
    // test case 이후 test case 횟수만큼
    // x1, x2, r1, y1, y2, r2가 입력
    // 있을 수 있는 좌표의 개수
    // 2차원 그래프로 생각해본다
    /*
    00:07
    첫번째 테케 0 0 13 40 0 37에 대한 결과값은 2
    (0, 40)에서 13의 거리, (0, 0)에서 37의 거리. 둘 다 만족하는 좌표값은 2개가 있다.
    2차원 그래프상에서 점과 점의 거리계산. 수학적 개념이 필요
    0, 40에서 13의 거리에 있는 점들을 모아서 선을 그으면 반지름 13짜리 원이 생성된다
    0, 0에서 37의 거리에 있는 점들을 모아서 선을 그으면 반지름 37짜리 원이 생성된다
    이 원들이 만나는 점이 2개가 있다는 말이다
    계산을 어떻게?
    00:14
    
    2차원에서 점과 점의 거리는 피타고라스의 정리로 구할 수 있다
    c제곱 = a제곱 + b제곱
    c=루트(a제곱+b제곱)
    
    0,40에서 13의 거리면 13 = 루트((0+a)제곱 + (40+b)제곱)인 a랑 b가 만족한다
    변수가 2개이므로 2개의 식이 필요. (0, 0)에서 37의 거리도 a랑 b로 구할 수 있다
    37 = 루트((0+a)제곱 + (0+b) 제곱)
    두개의 식을 연립방정식하여 만족하는 a랑 b의 쌍의 개수가 몇개인지?
    00:20
    */
    
    return 0;
}
